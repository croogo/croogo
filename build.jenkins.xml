<?xml version="1.0" encoding="UTF-8"?>

<project name="Croogo" default="build">
 <target name="build"
   depends="prepare,lint,phploc,pdepend,phpmd-ci,phpcs-ci,phpcpd,phpdoc,phpcb"/>

 <target name="build-parallel"
   depends="prepare,lint,tools-parallel,phpcb"/>

 <target name="tools-parallel"
         description="Run tools in parallel">
  <parallel threadCount="2">
   <sequential>
    <antcall target="pdepend"/>
    <antcall target="phpmd-ci"/>
   </sequential>
   <antcall target="phpcpd"/>
   <antcall target="phpcs-ci"/>
   <antcall target="phploc"/>
   <antcall target="phpdoc"/>
  </parallel>
 </target>

 <target name="clean" description="Cleanup build artifacts">
  <delete dir="${basedir}/build/api"/>
  <delete dir="${basedir}/build/code-browser"/>
  <delete dir="${basedir}/build/coverage"/>
  <delete dir="${basedir}/build/pdepend"/>
 </target>

 <target name="prepare" depends="clean"
         description="Prepare for build">
  <mkdir dir="${basedir}/build/api"/>
  <mkdir dir="${basedir}/build/code-browser"/>
  <mkdir dir="${basedir}/build/coverage"/>
  <mkdir dir="${basedir}/build/pdepend"/>
 </target>

 <target name="lint">
  <apply executable="php" failonerror="true">
   <arg value="-l" />

   <fileset dir="${basedir}">
    <include name="**/*.php" />
    <modified />
   </fileset>

  </apply>
 </target>

 <target name="phploc" description="Measure project size using PHPLOC">
  <exec executable="phploc">
   <arg value="--exclude" />
   <arg value="${basedir}/Test" />
   <arg value="--exclude" />
   <arg value="${basedir}/Templates" />
   <arg value="--log-csv" />
   <arg value="${basedir}/build/logs/phploc.csv" />
   <arg path="${basedir}" />
  </exec>
 </target>

 <target name="pdepend"
         description="Calculate software metrics using PHP_Depend">
  <exec executable="pdepend">
   <arg value="--ignore=${basedir}/Test,${basedir}Console/Templates" />
   <arg value="--jdepend-xml=${basedir}/build/logs/jdepend.xml" />
   <arg value="--jdepend-chart=${basedir}/build/pdepend/dependencies.svg" />
   <arg value="--overview-pyramid=${basedir}/build/pdepend/overview-pyramid.svg" />
   <arg path="${basedir}" />
  </exec>
 </target>

 <target name="phpmd" failonerror="off" failonruleviolation="off"  
         description="Perform project mess detection using PHPMD and print human readable output. Intended for usage on the command line before committing.">
  <exec executable="phpmd">
   <arg path="${basedir}" />
   <arg value="text" />
   <arg value="codesize,design,naming,unusedcode" />
   <arg value="--exclude" />
   <arg value="${basedir}/Test" />
   <arg value="--exclude" />
   <arg value="${basedir}/Console/Templates" />
  </exec>
 </target>

 <target name="phpmd-ci" failonerror="off" failonruleviolation="off"
         description="Perform project mess detection using PHPMD creating a log file for the continuous integration server">
  <exec executable="phpmd">
   <arg path="${basedir}" />
   <arg value="xml" />
   <arg value="codesize,design,naming,unusedcode" />
   <arg value="--reportfile" />
   <arg value="${basedir}/build/logs/pmd.xml" />
   <arg value="--exclude" />
   <arg value="${basedir}/Test" />
   <arg value="--exclude" />
   <arg value="${basedir}/Console/Templates" />
  </exec>
 </target>

 <target name="phpcs" failonerror="off" failonruleviolation="off"
         description="Find coding standard violations using PHP_CodeSniffer and print human readable output. Intended for usage on the command line before committing.">
  <exec executable="phpcs">
   <arg value="--standard=CakePHP" />
   <arg value="--ignore=${basedir}/Console/Templates,${basedir}/Test,*.txt,*.bat" />
   <arg path="${basedir}" />
  </exec>
 </target>

 <target name="phpcs-ci" failonerror="off" failonruleviolation="off" 
         description="Find coding standard violations using PHP_CodeSniffer creating a log file for the continuous integration server">
  <exec executable="phpcs" output="/dev/null">
   <arg value="--report=checkstyle" />
   <arg value="--report-file=${basedir}/build/logs/checkstyle.xml" />
   <arg value="--standard=CakePHP" />
   <arg value="--ignore=${basedir}/Console/Templates,${basedir}/Test,*.txt,*.bat" />
   <arg path="${basedir}" />
  </exec>
 </target>

 <target name="phpcpd" description="Find duplicate code using PHPCPD" failonerror="off" failonruleviolation="off">
  <exec executable="phpcpd">
   <arg value="--log-pmd" />
   <arg value="${basedir}/build/logs/pmd-cpd.xml" />
   <arg value="--exclude" />
   <arg value="${basedir}/Test" />
   <arg value="--exclude" />
   <arg value="${basedir}/Console/Templates" />
   <arg path="${basedir}" />
  </exec>
 </target>

 <target name="phpdoc" failonerror="off"
         description="Generate API documentation using PHPDocumentor">
  <exec executable="phpdoc">
   <arg value="--directory" />
   <arg path="${basedir}" />
   <arg value="--target" />
   <arg path="${basedir}/build/api" />
   <arg value="--ignore" />
   <arg value="Console/cake.php,Test/,Console/Templates/skel/,Config/unicode/" />
   </exec>
 </target>

 <target name="phpcb" failonerror="off"
         description="Aggregate tool output with PHP_CodeBrowser">
  <exec executable="phpcb">
   <arg value="--log" />
   <arg path="${basedir}/build/logs" />
   <arg value="--source" />
   <arg path="${basedir}" />
   <arg value="--output" />
   <arg path="${basedir}/build/code-browser" />
   <arg value="-S" />
   <arg value="php" />
   <arg value="-i" />
   <arg value="Console/cake,Console/cake.php,Test/,LICENSE.txt,VERSION.txt,Console/Templates/skel/" />
  </exec>
 </target>
</project>
